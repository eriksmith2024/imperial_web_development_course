import { createSlice } from '@reduxjs/toolkit'; // Imports the createSlice function from Redux 


const initialState = {// Defines the initial state for the authentication slice of the Redux store.
  isLoggedIn: localStorage.getItem('isLoggedIn') === 'true', // Checks if 'isLoggedIn' is stored in localStorage sets initial state accordingly 
  username: localStorage.getItem('loggedInUsername') || null,   // Retrieves the logged-in username from localStorage, or sets it to null if not found.
  firstName: localStorage.getItem('loggedInFirstName') || null,   // Retrieves the logged-in first name from localStorage, or sets it to null if not found.
  lastName: localStorage.getItem('loggedInLastName') || null, // same as above for last name
};

// Creates a Redux slice named 'auth' to manage authentication-related state.
export const authSlice = createSlice({
  name: 'auth', // The name of this slice in the Redux store.
  initialState, // Uses the defined initial state for this slice.
  reducers: {
    // Defines a reducer function named 'login' to handle user login.
    login: (state, action) => {
      state.isLoggedIn = true; // Sets the isLoggedIn state to true.
      state.username = action.payload.username; // Updates the username in the state with the payload from the action.
      state.firstName = action.payload.firstName; // Updates the firstName in the state with the payload from the action.
      state.lastName = action.payload.lastName; // Updates the lastName in the state with the payload from the action.
      localStorage.setItem('isLoggedIn', 'true'); // Stores the logged-in status in localStorage.
      localStorage.setItem('loggedInUsername', action.payload.username); // Stores the username in localStorage.
      localStorage.setItem('loggedInFirstName', action.payload.firstName); // Stores the first name in localStorage.
      localStorage.setItem('loggedInLastName', action.payload.lastName); // Stores the last name in localStorage.
    },
    // Defines a reducer function named 'logout' to handle user logout.
    logout: (state) => {
      state.isLoggedIn = false; // Sets the isLoggedIn state to false.
      state.username = null; // Clears the username from the state.
      state.firstName = null; // Clears the firstName from the state.
      state.lastName = null; // Clears the lastName from the state.
      localStorage.removeItem('isLoggedIn'); // Removes the logged-in status from localStorage.
      localStorage.removeItem('loggedInUsername'); // Removes the username from localStorage.
      localStorage.removeItem('loggedInFirstName'); // Removes the first name from localStorage.
      localStorage.removeItem('loggedInLastName'); // Removes the last name from localStorage.
    },
  },
});

// Exports the action creators generated by createSlice (login and logout).
export const { login, logout } = authSlice.actions;

// Exports the reducer function generated by createSlice, which will handle updates to the 'auth' slice of the store.
export default authSlice.reducer;